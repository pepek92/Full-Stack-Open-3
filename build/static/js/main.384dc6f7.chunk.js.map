{"version":3,"sources":["services/persons.js","components/Personform.js","components/Filter.js","components/ListPersons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","Object","delete","Personform","props","onSubmit","value","newName","onChange","onNameChange","newNumber","onNumberChange","type","Filter","ListPersons","persons","map","x","i","name","toLowerCase","includes","filter","number","onClick","nameObject","deleteName","console","log","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","notification","setNotification","useEffect","personService","then","response","data","event","target","preventDefault","some","person","window","confirm","personToChange","find","n","changedPerson","setTimeout","catch","error","concat","deletedPerson","p","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.384dc6f7.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons/'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst deletePerson = (id, Object) => {\r\n  return axios.delete(`${baseUrl}/${id}`, Object)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React from 'react'\r\n\r\nconst Personform = props => (\r\n    <div>\r\n      <form onSubmit={props.onSubmit}>\r\n          <div>\r\n            name: <input value={props.newName}\r\n            onChange={props.onNameChange}/>\r\n          </div>\r\n          <div>\r\n            number: <input value={props.newNumber}\r\n            onChange={props.onNumberChange}/>\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">add</button>\r\n          </div>\r\n        </form>\r\n    </div>\r\n  )\r\n\r\n  export default Personform","import React from 'react'\r\n\r\nconst Filter = props => (\r\n    <div>\r\n      filter shown with <input onChange={props.onChange} value={props.value}></input>\r\n    </div>\r\n  )\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst ListPersons = (props) => {\r\n\r\n  const handleClick = (nameObject) => {\r\n    props.deleteName(nameObject)\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      {props.persons.map((x, i) => \r\n        x.name.toLowerCase().includes(props.filter.toLowerCase()) ? \r\n        <li key={i}>{x.name} {x.number}\r\n        <button onClick={() => handleClick(x)}>delete</button>\r\n        </li> : console.log(\"Numeroa ei l√∂ydy\"))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListPersons","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","/* eslint-disable array-callback-return */\nimport React, { useState, useEffect } from 'react'\nimport personService from \"./services/persons\"\nimport './index.css';\nimport Personform from './components/Personform';\nimport Filter from './components/Filter'\nimport ListPersons from './components/ListPersons';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState(\"\")\n  const [ newNumber, setNewNumber ] = useState(\"\")\n  const [ filter, setFilter ] = useState(\"\")\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n  \n    if (persons.some(person => person.name === newName)) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const personToChange = persons.find(n => n.name === newName)\n        const changedPerson = { ...personToChange, number: newNumber }\n\n        personService\n        .update(personToChange.id, changedPerson)\n        .then(response => {\n        console.log(response)\n        setPersons(persons.map(person => person.id !== changedPerson.id ? person : response.data))\n        setNotification(\n          `${newName} number changed`\n        )\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setNotification(\n          `Information of ${nameObject.name} has already been removed from the server`\n        )\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n      })\n    }\n    }\n    else {\n      personService\n        .create(nameObject)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setNewName('')\n          setNewNumber('')\n          setNotification(\n            `Added ${newName}`\n          )\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const handleDeleteButton = (person) => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n    const deletedPerson = persons.find(n => n.id === person.id)\n    personService\n      .deletePerson(person.id, deletedPerson)\n      .then(response => {\n        setPersons(persons.filter(p => p.id !== person.id))\n        setNotification(\n          `Deleted ${deletedPerson.name}`\n        )\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n      })\n      .catch(error => {\n        alert(\n          `${deletedPerson.name} was already removed from the server`\n        )\n      })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification}/>\n      <Filter onChange={handleFilterChange} value={filter}/>\n      <h2>Add a new</h2>\n      <Personform onSubmit={addName} onNameChange={handleNameChange} onNumberChange={handleNumberChange} name={newName} number={newNumber}/>\n      <h2>Numbers</h2>\n      <ListPersons persons={persons} filter={filter} deleteName={handleDeleteButton} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}